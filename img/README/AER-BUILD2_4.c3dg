

DEF recursions 4
DEF FIELD_STR 0.001
background { RGB .05 .075 .1 }
camera { z -1.5 ry 5}//y 2.6 rx 90 }

rule scene {  
    4* { z .8 rx 30 y .3 }
    3* { s 1.5 }
    menger { shading WBR 
        d recursions y -.15 s .3 ry 30 rx 30} 
    10000*{ } 
        star { 
            x (-1+rnd()*2+x*0)
            y (-.1+rnd()*1+x*0)
            z rnd()+x*0
            s .005
            RGB 1 1 1  
            layer -1
        }
}

rule star { CIRCLE { DEF { ox = x; oy = y; oz = z } } }


rule menger {
    possible_box  { d -1 }
    2*{ x (2/3) } 3*{ y (1/3) } 2*{ z (2/3) }
        rotation { s (1/3) x -1.5   y -1 z -1   DEF {count=count+1}}
    2*{ y (2/3) } 2*{ z (2/3) }
        rotation { s (1/3) y -1     z -1        DEF {count=count+1}}
    2*{ y (2/3) } 2*{ x (2/3) }
        rotation { s (1/3) y -3.5   x -1        DEF {count=count+1}}
}

rule rotation { 
    menger { 
        d (d) 
        x (floor(saw(x*2.5)*14))
        rx 180 rz 178  
        s .9 1 1
    }
}

rule  possible_box { 
    pre { recursions < count+3 } 
    draw{ }
}
rule draw { 
    box { col0 (z*(x+y-.2)*7) col1 (z*4)}
}
rule box {
    dd_ { x -.5 ry -90 L -.2 }
    dd_ { x 0.5 ry 90 L .2 }
    dd_ { z -.5 L .1 }
    dd_ { z 0.5 ry 180 L -.1 }
}
rule dd_ {
    SQUARE { }
    maybe { z -.1 s .75 L 1 A -.5 shading -1 PUSH SQUARE }
}
rule maybe .9 { POP { } }
rule maybe .1 { maybe { L -1 } }

light aa { point(0,.3,-.025) { RGB 1 .8 1 } s .1 }  
light star { point(ox+rnd()*.2+x*0,oy,oz) { RGB 1 1 1 } s .01 }
light aa { DARKNESS point(0,.6,-1.5) { RGB 1 1 1 } s .2 }  
light aa { DARKNESS point(0,.3,2) { RGB .3 .8 .5 } s .5 }  
shading WBR { 
    point(0) { RGB .2 .6 .6 s FIELD_STR}
    point(.5) { RGB 0 0 0 s (FIELD_STR*3)}
    point(1) { RGB 1 1 1 s (FIELD_STR*2)}
    A .65
}