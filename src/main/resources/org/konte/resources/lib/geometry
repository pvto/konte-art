
// constants and lambdas

DEF RAD (PI/180)
DEF DEC (180/PI)
MACRO SECLB .275*ANG/4/90
DEF H5YH .5/cos(PI/5)
DEF H6YH .5/cos(PI/6)
MACRO NGYH .5/cos(PI/n)


void{}

// 

LINE {
  *{{SY=(y2-y1); SX=(x2-x1); }}
  *{{S_=max(abs(SY),abs(SX)); k=atan(SY/SX); }}
  *{{SY=SY/S_; SX=SX/S_; }}
  *{{width=max(0.0001,width); scap=coalesce(scap,cap); }}
    LINE__{x x1 y y1 s S_ 
      {x2=(1/S)*(x2-x1);
       y2=(1/S)*(y2-y1);
      }
    }
}

path LINE__{
  moveto(width*cos(k-PI/2), width*sin(k-PI/2), 0)
  lineto(width*cos(k-PI/2) + SX, width*sin(k-PI/2) + SY, 0)
  bend(width*cos(k-PI/2) + SX + cos(k)*width*cap,
      width*sin(k-PI/2) + SY + sin(k)*width*cap,
      0
  )
  bend(width*cos(k+PI/2) + SX + cos(k)*width*cap,
      width*sin(k+PI/2) + SY + sin(k)*width*cap,
      0
  )
  curveto(width*cos(k+PI/2) + SX, width*sin(k+PI/2) + SY, 0)
  lineto(width*cos(k+PI/2), width*sin(k+PI/2), 0)
  bend(width*cos(k+PI/2) + cos(k+PI)*width*scap, 
      width*sin(k+PI/2) + sin(k+PI)*width*scap, 
      0
  )
  bend(width*cos(k-PI/2) + cos(k+PI)*width*scap, 
      width*sin(k-PI/2) + sin(k+PI)*width*scap, 
      0
  )
  curveto(width*cos(k-PI/2), width*sin(k-PI/2), 0)
  close
}


rule RECT     { RECTANGLE{} }

path TRI       { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) close }
path RECTANGLE { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) close }
path PENTANGLE { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) lineto(x5,y5,z5) close }
path HEXANGLE  { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) lineto(x5,y5,z5) lineto(x6,y6,z6) close }
path SEPTANGLE { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) lineto(x5,y5,z5) lineto(x6,y6,z6) lineto(x7,y7,z7) close }
path OCTANGLE  { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) lineto(x5,y5,z5) lineto(x6,y6,z6) lineto(x7,y7,z7) lineto(x8,y8,z8) close }
path NONANGLE  { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) lineto(x5,y5,z5) lineto(x6,y6,z6) lineto(x7,y7,z7) lineto(x8,y8,z8) lineto(x9,y9,z9) close }
path DECANGLE  { moveto(x1,y1,z1) lineto(x2,y2,z2) lineto(x3,y3,z3) lineto(x4,y4,z4) lineto(x5,y5,z5) lineto(x6,y6,z6) lineto(x7,y7,z7) lineto(x8,y8,z8) lineto(x9,y9,z9) lineto(x10,y10,z10) close }


SECTOR{ SECTOR_{{ANG=max(-360,min(360,ANG))}} }
path SECTOR_ {
  moveto(0,0,0)
  lineto(0,.5,0)
  bend(cos((90+90)*RAD)*SECLB, .5 + sin((90+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((ANG/4)*RAD)*SECLB, 
      .5*sin((90+ANG/4)*RAD) + sin((ANG/4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4)*RAD), .5*sin((90+ANG/4)*RAD), 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((90+ANG/4+90)*RAD)*SECLB,
      .5*sin((90+ANG/4)*RAD) + sin((90+ANG/4+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((ANG/4*2)*RAD)*SECLB, 
      .5*sin((90+ANG/4*2)*RAD) + sin((ANG/4*2)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD), .5*sin((90+ANG/4*2)*RAD), 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((90+ANG/4*2+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*2)*RAD) + sin((90+ANG/4*2+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((ANG/4*3)*RAD)*SECLB, 
      .5*sin((90+ANG/4*3)*RAD) + sin((ANG/4*3)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD), .5*sin((90+ANG/4*3)*RAD), 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((90+ANG/4*3+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*3)*RAD) + sin((90+ANG/4*3+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*4)*RAD) + cos((ANG/4*4)*RAD)*SECLB, 
      .5*sin((90+ANG/4*4)*RAD) + sin((ANG/4*4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
  close
}


RIM{ RIM__{{rim__=1-coalesce(rim, .1); ANG=coalesce(ANG,360)}} }
path RIM__ {
  moveto(0,.5,0)
  bend(cos((90+90)*RAD)*SECLB, .5, 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((ANG/4)*RAD)*SECLB, 
      .5*sin((90+ANG/4)*RAD) + sin((ANG/4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4)*RAD), .5*sin((90+ANG/4)*RAD), 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((90+ANG/4+90)*RAD)*SECLB,
      .5*sin((90+ANG/4)*RAD) + sin((90+ANG/4+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((ANG/4*2)*RAD)*SECLB, 
      .5*sin((90+ANG/4*2)*RAD) + sin((ANG/4*2)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD), .5*sin((90+ANG/4*2)*RAD), 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((90+ANG/4*2+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*2)*RAD) + sin((90+ANG/4*2+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((ANG/4*3)*RAD)*SECLB, 
      .5*sin((90+ANG/4*3)*RAD) + sin((ANG/4*3)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD), .5*sin((90+ANG/4*3)*RAD), 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((90+ANG/4*3+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*3)*RAD) + sin((90+ANG/4*3+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*4)*RAD) + cos((ANG/4*4)*RAD)*SECLB, 
      .5*sin((90+ANG/4*4)*RAD) + sin((ANG/4*4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
  lineto(.5*cos((90+ANG)*RAD)*rim__, .5*sin((90+ANG)*RAD)*rim__, 0)

  bend(.5*cos((90+ANG/4*4)*RAD)*rim__ + cos((ANG/4*4)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*4)*RAD)*rim__ + sin((ANG/4*4)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4*3)*RAD)*rim__ + cos((90+ANG/4*3+90)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*3)*RAD)*rim__ + sin((90+ANG/4*3+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD)*rim__, .5*sin((90+ANG/4*3)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4*3)*RAD)*rim__ + cos((ANG/4*3)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*3)*RAD)*rim__ + sin((ANG/4*3)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4*2)*RAD)*rim__ + cos((90+ANG/4*2+90)*RAD)*SECLB*rim__,
      .5*sin((90+ANG/4*2)*RAD)*rim__ + sin((90+ANG/4*2+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD)*rim__, .5*sin((90+ANG/4*2)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4*2)*RAD)*rim__ + cos((ANG/4*2)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*2)*RAD)*rim__ + sin((ANG/4*2)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4)*RAD)*rim__ + cos((90+ANG/4+90)*RAD)*SECLB*rim__,
      .5*sin((90+ANG/4)*RAD)*rim__ + sin((90+ANG/4+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4)*RAD)*rim__, .5*sin((90+ANG/4)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4)*RAD)*rim__ + cos((ANG/4)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4)*RAD)*rim__ + sin((ANG/4)*RAD)*SECLB*rim__, 0)
  bend(cos((90+90)*RAD)*SECLB*rim__, .5*rim__, 0)
  curveto(0, .5*rim__, 0)
  lineto(0,.5,0)
  close
}


path SQU {
  moveto(-.5 + min(.5, .5*r), .5, 0)
  lineto(.5 - min(.5, .5*r), .5, 0)
  bend(.5 - min(.5, .125*r), .5, 0)
  bend(.5, .5 - min(.5, .125*r), 0)
  curveto(.5, .5 - min(.5, .5*r), 0)
  lineto(.5, -.5 + min(.5, .5*r), 0)
  bend(.5, -.5 + min(.5, .125*r), 0)
  bend(.5 - min(.5, .125*r), -.5, 0)
  curveto(.5 - min(.5, .5*r), -.5, 0)
  lineto(-.5 + min(.5, .5*r), -.5, 0)
  bend(-.5 + min(.5, .125*r), -.5, 0)
  bend(-.5, -.5 + min(.5, .125*r), 0)
  curveto(-.5, -.5 + min(.5, .5*r), 0)
  lineto(-.5, .5 - min(.5, .5*r), 0)
  bend(-.5, .5 - min(.5, .125*r), 0)
  bend(-.5 + min(.5, .125*r), .5, 0)
  curveto(-.5 + min(.5, .5*r), .5, 0)
  close
}



PETAL{PETAL_{rz -ANG/2}}
path PETAL_ {
    moveto(0,0,0)
    lineto(0, .5, 0)
    bend(0, .5 + ROUND, 0)
    bend((.5 + ROUND)*cos((90+ANG)*RAD), (.5 + ROUND)*sin((90+ANG)*RAD), 0)
    curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
    close
}



// 

SKEWSTAR {
    *{{ADD=2*PI/n}}
        (n)*{{RZ=RZ+ADD}}
            TRI{{
                x1=0; y1=0;
                x2=cos(RZ)*.5;
                y2=sin(RZ)*.5;
                x3=cos(RZ+ADD)*.5*TOOTH;
                y3=sin(RZ+ADD)*.5*TOOTH;
            }}
}

path FTRI {
    moveto(X0,Y0,0)
    lineto(x1,y1,0)
    lineto(x2,y2,0)
    close
}


// polygon output

path PENTAGON {
  moveto(cos((90)*RAD)*H5YH,sin((90)*RAD)*H5YH,0)
  lineto(cos((90-72)*RAD)*H5YH,sin((90-72)*RAD)*H5YH,0)
  lineto(cos((90-72*2)*RAD)*H5YH,sin((90-72*2)*RAD)*H5YH,0)
  lineto(cos((90-72*3)*RAD)*H5YH,sin((90-72*3)*RAD)*H5YH,0)
  lineto(cos((90-72*4)*RAD)*H5YH,sin((90-72*4)*RAD)*H5YH,0)
  close
}

path HEXAGON {
  moveto(0, H6YH, 0)
  lineto(cos(RAD*(90+60*1))*H6YH, sin(RAD*(90+60*1))*H6YH, 0)
  lineto(cos(RAD*(90+60*2))*H6YH, sin(RAD*(90+60*2))*H6YH, 0)
  lineto(cos(RAD*(90+60*3))*H6YH, sin(RAD*(90+60*3))*H6YH, 0)
  lineto(cos(RAD*(90+60*4))*H6YH, sin(RAD*(90+60*4))*H6YH, 0)
  lineto(cos(RAD*(90+60*5))*H6YH, sin(RAD*(90+60*5))*H6YH, 0)
  close
}



HEPTAGON { TRInGON {{n=7}} }
OCTAGON { TRInGON {{n=8}} }
DECAGON { TRInGON {{n=10}} }



rule TRInGON {
  (n)*{rz 360/n} TRIN {}
}

path TRIN {
  moveto(0, NGYH, 0)
  lineto(NGYH*cos(RAD*(90-360/n)), NGYH*sin(RAD*(90-360/n)), 0)
  lineto(0, 0, 0)
  close
}



MACRO FR__ (1-coalesce(frame,.1))*.5
MACRO FR__Y (1-coalesce(framey,frame,.1))*.5
path FRAME {
    moveto(-.5,-.5,.0)
    lineto(-.5,.5,.0)
    lineto(.5,.5,.0)
    lineto(.5,-.5,.0)
    lineto(-.5,-.5,.0)
    close
    moveto(-FR__,-FR__Y,.0)
    lineto(FR__,-FR__Y,.0)
    lineto(FR__,FR__Y,.0)
    lineto(-FR__,FR__Y,.0)
    lineto(-FR__,-FR__Y,.0)
    close
}






CURVE {
  *{{c1bx= coalesce(c1bx, x1); c1by= coalesce(c1by, y1);
    c2ax= coalesce(c2ax, x2); c2ay= coalesce(c2ay, y2); }}
  *{{
    dx1= 3*(c1bx-x1); dy1= 3*(c1by-y1);
    dx2= 3*(x2-c2ax); dy2= 3*(y2-c2ay);
    width= coalesce(width, 00001)*.5; }} 
  CURVE__ {{
    dx1= dx1/sqrt(dx1**2 + dy1**2 + .00001);
    dy1= dy1/sqrt(dx1**2 + dy1**2 + .00001);
    dx2= dx2/sqrt(dx2**2 + dy2**2 + .00001);
    dy2= dy2/sqrt(dx2**2 + dy2**2 + .00001);
  }}
}
path CURVE__ {
  moveto(x1 - width * dy1, y1 + width * dx1, z1)
  bend(c1bx - width * dy1, c1by + width * dx1, c1bz)
  bend(c2ax - width * dy2, c2ay + width * dx2, c2az)
  curveto(x2 - width * dy2, y2 + width * dx2, z2)
  lineto(x2 + width * dy2, y2 - width * dx2, z2)
  bend(c2ax + width * dy2, c2ay - width * dx2, c2az)
  bend(c1bx + width * dy1, c1by - width * dx1, c1bz)
  curveto(x1 + width * dy1, y1 - width * dx1, z1)
  lineto(x1 - width * dy1, y1 + width * dx1, z1)
  close
}


path TRIARC {
  moveto(x1,y1,z1)
  bend(coalesce(c1bx,x1),coalesce(c1by,y1),coalesce(c1bz,z1))
  bend(coalesce(c2ax,x2),coalesce(c2ay,y2),coalesce(c2az,z2))
  curveto(x2,y2,z2)
  bend(coalesce(c2bx,x2),coalesce(c2by,y2),coalesce(c2bz,z2))
  bend(coalesce(c3ax,x3),coalesce(c3ay,y3),coalesce(c3az,z3))
  curveto(x3,y3,z3)
  bend(coalesce(c3bx,x3),coalesce(c3by,y3),coalesce(c3bz,z3))
  bend(coalesce(c1ax,x1),coalesce(c1ay,y1),coalesce(c1az,z1))
  curveto(x1,y1,z1) 
  close 
}





// 3D objects
// -.-.-.-.-.-.-.-.-.-.-.-.-.-.--. //

PYRAMID {
    4*{ry 90}
    {
      TRIANGLE{ z - 1/4 rx -30 L -.5}
      TRIANGLE{ z - 1/4 rx -30 s .9 }
    }
}

box {
  4*{ry 90}{SQUARE{z -.5 L -1}SQUARE{z -.5 s max(0, 1-BW)}}
  2*{rx 180}{SQUARE{rx 90 z -.5 L -.5}SQUARE{rx 90 z -.5 s max(0, 1-BW)}}
}


path PLATE {
  moveto(x1,y1,z1)
  bend((x2+x1)/2+x1a,(y2+y1)/2+y1a,(z2+z1)/2+z1a)
  bend((x2+x1)/2+x1b,(y2+y1)/2+y1b,(z2+z1)/2+z1b)
  curveto(x2,y2,z2)
  lineto(x3,y3,z3)
  bend((x4+x3)/2+x3a,(y4+y3)/2+y3a,(z4+z3)/2+z3a)
  bend((x4+x3)/2+x3b,(y4+y3)/2+y3b,(z4+z3)/2+z3b)
  curveto(x4,y4,z4)
  close
}



nPIPE {
  *{{
     F=coalesce(F, .009);
     p=coalesce(p, 1);
     q=coalesce(q, 1);
     r=coalesce(r, .5);
     n=coalesce(n, 40);}}
    *{{Ry=PI*2/n}}
  (n*p)*{{Ry0=Ry; Ry=Ry+PI*2/n}} {
    RECT{{
      x1=cos(Ry0)*r; y1=-r; z1=sin(Ry0)*r;
      x2=cos(Ry0)*r*q; y2=r; z2=sin(Ry0)*r*q;
      x3=cos(Ry+F)*r*q; y3=r; z3=sin(Ry+F)*r*q;
      x4=cos(Ry+F)*r; y4=-r; z4=sin(Ry+F)*r;
    }}
  }
}

nCONE { nPIPE{{q=0.001}} }

bnCONE {
  *{{
     F=coalesce(F, .009);
     p=coalesce(p, 1);
     q=coalesce(q, 1);
     r=coalesce(r, .5);
     n=coalesce(n, 40);}}
    *{{Ry=PI*2/n}}
  (n*p)*{ry Ry/PI*180} {
    PLATE{{
      x1=cos(0)*r; y1=-r; z1=sin(0)*r;
      x2=cos(0)*r*q; y2=r; z2=sin(0)*r*q;
      x3=cos(Ry+F)*r*q; y3=r; z3=sin(Ry+F)*r*q;
      x4=cos(Ry+F)*r; y4=-r; z4=sin(Ry+F)*r;
      y1a=-.25; y1b=.25; y3a=.25; y3b=-.25;
      z1a=coalesce(bent, -.5);
      z1b=coalesce(bent, -.5);
      z3a=coalesce(bent, -.5);
      z3b=coalesce(bent, -.5);
    }}
  }
}

