
// constants and lambdas

DEF RAD (PI/180)
DEF DEC (180/PI)
MACRO SECLB .275*ANG/4/90
DEF H5YH .5/cos(PI/5)
DEF H6YH .5/cos(PI/6)
MACRO NGYH .5/cos(PI/n)


// 

SECTOR{ SECTOR_{{ANG=max(-360,min(360,ANG))}} }
path SECTOR_ {
  moveto(0,0,0)
  lineto(0,.5,0)
  bend(cos((90+90)*RAD)*SECLB, .5 + sin((90+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((ANG/4)*RAD)*SECLB, 
      .5*sin((90+ANG/4)*RAD) + sin((ANG/4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4)*RAD), .5*sin((90+ANG/4)*RAD), 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((90+ANG/4+90)*RAD)*SECLB,
      .5*sin((90+ANG/4)*RAD) + sin((90+ANG/4+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((ANG/4*2)*RAD)*SECLB, 
      .5*sin((90+ANG/4*2)*RAD) + sin((ANG/4*2)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD), .5*sin((90+ANG/4*2)*RAD), 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((90+ANG/4*2+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*2)*RAD) + sin((90+ANG/4*2+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((ANG/4*3)*RAD)*SECLB, 
      .5*sin((90+ANG/4*3)*RAD) + sin((ANG/4*3)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD), .5*sin((90+ANG/4*3)*RAD), 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((90+ANG/4*3+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*3)*RAD) + sin((90+ANG/4*3+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*4)*RAD) + cos((ANG/4*4)*RAD)*SECLB, 
      .5*sin((90+ANG/4*4)*RAD) + sin((ANG/4*4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
  close
}


RIM{ RIM__{{rim__=1-rim}} }
path RIM__ {
  moveto(0,.5,0)
  bend(cos((90+90)*RAD)*SECLB, .5, 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((ANG/4)*RAD)*SECLB, 
      .5*sin((90+ANG/4)*RAD) + sin((ANG/4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4)*RAD), .5*sin((90+ANG/4)*RAD), 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((90+ANG/4+90)*RAD)*SECLB,
      .5*sin((90+ANG/4)*RAD) + sin((90+ANG/4+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((ANG/4*2)*RAD)*SECLB, 
      .5*sin((90+ANG/4*2)*RAD) + sin((ANG/4*2)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD), .5*sin((90+ANG/4*2)*RAD), 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((90+ANG/4*2+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*2)*RAD) + sin((90+ANG/4*2+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((ANG/4*3)*RAD)*SECLB, 
      .5*sin((90+ANG/4*3)*RAD) + sin((ANG/4*3)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD), .5*sin((90+ANG/4*3)*RAD), 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((90+ANG/4*3+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*3)*RAD) + sin((90+ANG/4*3+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*4)*RAD) + cos((ANG/4*4)*RAD)*SECLB, 
      .5*sin((90+ANG/4*4)*RAD) + sin((ANG/4*4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
  lineto(.5*cos((90+ANG)*RAD)*rim__, .5*sin((90+ANG)*RAD)*rim__, 0)

  bend(.5*cos((90+ANG/4*4)*RAD)*rim__ + cos((ANG/4*4)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*4)*RAD)*rim__ + sin((ANG/4*4)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4*3)*RAD)*rim__ + cos((90+ANG/4*3+90)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*3)*RAD)*rim__ + sin((90+ANG/4*3+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD)*rim__, .5*sin((90+ANG/4*3)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4*3)*RAD)*rim__ + cos((ANG/4*3)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*3)*RAD)*rim__ + sin((ANG/4*3)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4*2)*RAD)*rim__ + cos((90+ANG/4*2+90)*RAD)*SECLB*rim__,
      .5*sin((90+ANG/4*2)*RAD)*rim__ + sin((90+ANG/4*2+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD)*rim__, .5*sin((90+ANG/4*2)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4*2)*RAD)*rim__ + cos((ANG/4*2)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*2)*RAD)*rim__ + sin((ANG/4*2)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4)*RAD)*rim__ + cos((90+ANG/4+90)*RAD)*SECLB*rim__,
      .5*sin((90+ANG/4)*RAD)*rim__ + sin((90+ANG/4+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4)*RAD)*rim__, .5*sin((90+ANG/4)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4)*RAD)*rim__ + cos((ANG/4)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4)*RAD)*rim__ + sin((ANG/4)*RAD)*SECLB*rim__, 0)
  bend(cos((90+90)*RAD)*SECLB*rim__, .5*rim__, 0)
  curveto(0, .5*rim__, 0)
  lineto(0,.5,0)
  close
}




PETAL{PETAL_{rz -ANG/2}}
path PETAL_ {
    moveto(0,0,0)
    lineto(0, .5, 0)
    bend(0, .5 + ROUND, 0)
    bend((.5 + ROUND)*cos((90+ANG)*RAD), (.5 + ROUND)*sin((90+ANG)*RAD), 0)
    curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
    close
}



// 

SKEWSTAR {
    *{{ADD=2*PI/n}}
        (n)*{{RZ=RZ+ADD}}
            FTRI{{
                X0=0; Y0=0;
                X1=cos(RZ)*.5;
                Y1=sin(RZ)*.5;
                X2=cos(RZ+ADD)*.5*TOOTH;
                Y2=sin(RZ+ADD)*.5*TOOTH;
            }}
}

path FTRI {
    moveto(X0,Y0,0)
    lineto(X1,Y1,0)
    lineto(X2,Y2,0)
    close
}


// polygon output

path PENTAGON {
  moveto(cos((90)*RAD)*H5YH,sin((90)*RAD)*H5YH,0)
  lineto(cos((90-72)*RAD)*H5YH,sin((90-72)*RAD)*H5YH,0)
  lineto(cos((90-72*2)*RAD)*H5YH,sin((90-72*2)*RAD)*H5YH,0)
  lineto(cos((90-72*3)*RAD)*H5YH,sin((90-72*3)*RAD)*H5YH,0)
  lineto(cos((90-72*4)*RAD)*H5YH,sin((90-72*4)*RAD)*H5YH,0)
  close
}

path HEXAGON {
  moveto(0, H6YH, 0)
  lineto(cos(RAD*(90+60*1))*H6YH, sin(RAD*(90+60*1))*H6YH, 0)
  lineto(cos(RAD*(90+60*2))*H6YH, sin(RAD*(90+60*2))*H6YH, 0)
  lineto(cos(RAD*(90+60*3))*H6YH, sin(RAD*(90+60*3))*H6YH, 0)
  lineto(cos(RAD*(90+60*4))*H6YH, sin(RAD*(90+60*4))*H6YH, 0)
  lineto(cos(RAD*(90+60*5))*H6YH, sin(RAD*(90+60*5))*H6YH, 0)
  close
}



HEPTAGON { TRInGON {{n=7}} }
OCTAGON { TRInGON {{n=8}} }
DECAGON { TRInGON {{n=10}} }



rule TRInGON {
  (n)*{rz 360/n} TRIN {}
}

path TRIN {
  moveto(0, NGYH, 0)
  lineto(NGYH*cos(RAD*(90-360/n)), NGYH*sin(RAD*(90-360/n)), 0)
  lineto(0, 0, 0)
  close
}



MACRO FR__ (1-frame)*.5
path FRAME {
    moveto(-.5,-.5,.0)
    lineto(-.5,.5,.0)
    lineto(.5,.5,.0)
    lineto(.5,-.5,.0)
    lineto(-.5,-.5,.0)
    close
    moveto(-FR__,-FR__,.0)
    lineto(FR__,-FR__,.0)
    lineto(FR__,FR__,.0)
    lineto(-FR__,FR__,.0)
    lineto(-FR__,-FR__,.0)
    close
}


// 3D objects

PYRAMID {
    4*{ry 90}
    {
      TRIANGLE{ z - 1/4 rx -30 L -.5}
      TRIANGLE{ z - 1/4 rx -30 s .9 }
    }
}

box {
  4*{ry 90}{SQUARE{z -.5 L -1}SQUARE{z -.5 s max(0, 1-BW)}}
  2*{rx 180}{SQUARE{rx 90 z -.5 L -.5}SQUARE{rx 90 z -.5 s max(0, 1-BW)}}
}
